{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alex_\\\\OneDrive\\\\Documents\\\\Udemy Courses\\\\React.js\\\\react-complete-guide\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport './Expenses.css';\nimport ExpensesList from \"./ExpensesList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2021');\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        onChangeFilter: filterChangeHandler,\n        selected: filteredYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Expenses, \"Mc+NeR06clC/ISYiaZXb0Ie4vks=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","ExpensesList","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent"],"sources":["C:/Users/alex_/OneDrive/Documents/Udemy Courses/React.js/react-complete-guide/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport ExpenseItem from './ExpenseItem'\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport './Expenses.css'\r\nimport ExpensesList from \"./ExpensesList\";\r\n\r\nconst Expenses = (props) => {\r\n    const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n    };\r\n\r\n    const filteredExpenses = props.items.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n\r\n    let expensesContent = <p>No expenses found.</p>;\r\n\r\n\r\n    return(\r\n        <div>\r\n            <Card className='expenses'>\r\n                <ExpensesFilter onChangeFilter={filterChangeHandler} selected={filteredYear}/>\r\n                <ExpensesList />\r\n                {/**\r\n                  *{filteredExpenses.length === 0 ? ( <p>No expenses found</p> ) : (\r\n                  *filteredExpenses.map((expense) => (\r\n                  *    <ExpenseItem\r\n                  *        key={expense.id}\r\n                  *        title={expense.title}\r\n                  *        amount={expense.amount}\r\n                  *        date={expense.date}\r\n                  *    />\r\n                  *    ))\r\n                  *)}\r\n\r\n                  * alternatively, you could write the above ternary expression using the AND (&&) logic\r\n                  * in JS, the second part of an && statement only gets checked if the first conidition\r\n                  * is met, it would something like:\r\n                  * {filteredExpenses === 0 && <p>no expenses found</p>}\r\n                  * {filteredExpenses > 0 && filteredExpenses.map()}\r\n                  */\r\n                }\r\n\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Expenses;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,gBAAgB;AACvB,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAE1C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC;EAExD,MAAMS,mBAAmB,GAAIC,YAAY,IAAK;IAC1CF,eAAe,CAACE,YAAY,CAAC;EACjC,CAAC;EAED,MAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAK,CAACC,MAAM,CAACC,OAAO,IAAI;IACnD,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKV,YAAY;EACjE,CAAC,CAAC;EAGF,IAAIW,eAAe,gBAAG;IAAA,UAAG;EAAkB;IAAA;IAAA;IAAA;EAAA,QAAI;EAG/C,oBACI;IAAA,uBACI,QAAC,IAAI;MAAC,SAAS,EAAC,UAAU;MAAA,wBACtB,QAAC,cAAc;QAAC,cAAc,EAAET,mBAAoB;QAAC,QAAQ,EAAEF;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE,eAC9E,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAqBb;IAAA;IAAA;IAAA;EAAA,QACL;AAEd,CAAC;AAAA,GA3CKF,QAAQ;AAAA,KAARA,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}