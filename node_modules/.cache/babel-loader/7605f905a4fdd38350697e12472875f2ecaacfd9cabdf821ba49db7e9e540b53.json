{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alex_\\\\OneDrive\\\\Documents\\\\Udemy Courses\\\\React.js\\\\react-complete-guide\\\\src\\\\components\\\\Expenses\\\\ExpenseItem.js\";\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport React, { useState } from 'react';\nimport './ExpenseItem.css';\n\n// useState TL:DR:\n//      register state with useState, you always get back two items, the value itself and the updating function\n//      you call the updating function whenever the state should change and you use the first of the two elements\n//      whenever you want to use the state value to output it to the JSX code. React will re-execute the component\n//      function and re-evaluate the JSX code whenever the state changes\n\n// Presentational (Dumby) Component (vs Stateful Component)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseItem = props => {\n  return (\n    /*#__PURE__*/\n    //must have only ONE root element, and then as many children as you want\n    _jsxDEV(Card, {\n      className: \"expense-item\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n        date: props.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-item__price\",\n          children: [\"$\", props.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  );\n};\n_c = ExpenseItem;\nexport default ExpenseItem;\nvar _c;\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["ExpenseDate","Card","React","useState","ExpenseItem","props","date","title","amount"],"sources":["C:/Users/alex_/OneDrive/Documents/Udemy Courses/React.js/react-complete-guide/src/components/Expenses/ExpenseItem.js"],"sourcesContent":["import ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport React, { useState } from 'react';\r\n\r\nimport './ExpenseItem.css'\r\n\r\n// useState TL:DR:\r\n//      register state with useState, you always get back two items, the value itself and the updating function\r\n//      you call the updating function whenever the state should change and you use the first of the two elements\r\n//      whenever you want to use the state value to output it to the JSX code. React will re-execute the component\r\n//      function and re-evaluate the JSX code whenever the state changes\r\n\r\n\r\n// Presentational (Dumby) Component (vs Stateful Component)\r\nconst ExpenseItem = (props) =>{\r\n\r\n    return(\r\n        //must have only ONE root element, and then as many children as you want\r\n        <Card className='expense-item'>\r\n            <ExpenseDate date={props.date}/>\r\n            <div className=\"expense-item__description\">\r\n                <h2>{props.title}</h2>\r\n                <div className=\"expense-item__price\">${props.amount}</div>\r\n            </div>\r\n       \r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;"],"mappings":";AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,mBAAmB;;AAE1B;AACA;AACA;AACA;AACA;;AAGA;AAAA;AACA,MAAMC,WAAW,GAAIC,KAAK,IAAI;EAE1B;IAAA;IACI;IACA,QAAC,IAAI;MAAC,SAAS,EAAC,cAAc;MAAA,wBAC1B,QAAC,WAAW;QAAC,IAAI,EAAEA,KAAK,CAACC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAE,eAChC;QAAK,SAAS,EAAC,2BAA2B;QAAA,wBACtC;UAAA,UAAKD,KAAK,CAACE;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eACtB;UAAK,SAAS,EAAC,qBAAqB;UAAA,WAAC,GAAC,EAACF,KAAK,CAACG,MAAM;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QACxD;IAAA;MAAA;MAAA;MAAA;IAAA;EAEH;AAEf,CAAC;AAAA,KAbKJ,WAAW;AAejB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}