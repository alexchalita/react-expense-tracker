{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alex_\\\\OneDrive\\\\Documents\\\\Udemy Courses\\\\React.js\\\\react-complete-guide\\\\src\\\\components\\\\Expenses\\\\ExpenseItem.js\",\n  _s = $RefreshSig$();\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport React, { useState } from 'react';\nimport './ExpenseItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseItem = props => {\n  _s();\n  // useState tells React that the value of title needs to be re-evaluated when setTitle is called \n  // useState registers some state for a component where it's being called (for a specific component instance)\n  // in this case, there are multiple instances of ExpenseItem, each one will have it's own state\n  const [title, setTitle] = useState(props.title);\n  const clickHandler = () => {\n    setTitle(\"a new title\");\n  };\n  return (\n    /*#__PURE__*/\n    //must have only ONE root element, and then as many children as you want\n    _jsxDEV(Card, {\n      className: \"expense-item\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n        date: props.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-item__price\",\n          children: [\"$\", props.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickHandler,\n        children: \"Change Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(ExpenseItem, \"ceUz0wjPP/oTY3+evv2xH5hljW4=\");\n_c = ExpenseItem;\nexport default ExpenseItem;\nvar _c;\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["ExpenseDate","Card","React","useState","ExpenseItem","props","title","setTitle","clickHandler","date","amount"],"sources":["C:/Users/alex_/OneDrive/Documents/Udemy Courses/React.js/react-complete-guide/src/components/Expenses/ExpenseItem.js"],"sourcesContent":["import ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport React, { useState } from 'react';\r\n\r\nimport './ExpenseItem.css'\r\n\r\nconst ExpenseItem = (props) =>{\r\n    // useState tells React that the value of title needs to be re-evaluated when setTitle is called \r\n    // useState registers some state for a component where it's being called (for a specific component instance)\r\n    // in this case, there are multiple instances of ExpenseItem, each one will have it's own state\r\n    const [title, setTitle] = useState(props.title);\r\n    \r\n    const clickHandler = () => {\r\n        setTitle(\"a new title\");\r\n    }\r\n\r\n    return(\r\n        //must have only ONE root element, and then as many children as you want\r\n        <Card className='expense-item'>\r\n            <ExpenseDate date={props.date}/>\r\n            <div className=\"expense-item__description\">\r\n                <h2>{title}</h2>\r\n                <div className=\"expense-item__price\">${props.amount}</div>\r\n            </div>\r\n            {/*the reason we only point to clickHandler and not call it (i.e clickHandler() ) \r\n              *is because the function call is JavaScript which happens when the element is loaded\r\n              *we just need to point to the function when the \"onClick\" event happens (too early)\r\n              */}\r\n            <button onClick={clickHandler}>Change Title</button>            \r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,mBAAmB;AAAA;AAE1B,MAAMC,WAAW,GAAIC,KAAK,IAAI;EAAA;EAC1B;EACA;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAACE,KAAK,CAACC,KAAK,CAAC;EAE/C,MAAME,YAAY,GAAG,MAAM;IACvBD,QAAQ,CAAC,aAAa,CAAC;EAC3B,CAAC;EAED;IAAA;IACI;IACA,QAAC,IAAI;MAAC,SAAS,EAAC,cAAc;MAAA,wBAC1B,QAAC,WAAW;QAAC,IAAI,EAAEF,KAAK,CAACI;MAAK;QAAA;QAAA;QAAA;MAAA,QAAE,eAChC;QAAK,SAAS,EAAC,2BAA2B;QAAA,wBACtC;UAAA,UAAKH;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eAChB;UAAK,SAAS,EAAC,qBAAqB;UAAA,WAAC,GAAC,EAACD,KAAK,CAACK,MAAM;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QACxD,eAKN;QAAQ,OAAO,EAAEF,YAAa;QAAA,UAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACjD;AAEf,CAAC;AAAA,GAzBKJ,WAAW;AAAA,KAAXA,WAAW;AA2BjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}